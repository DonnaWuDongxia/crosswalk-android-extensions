// Copyright 2014 Intel Corporation. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file has been auto-generated by {{code_generator}}. DO NOT MODIFY!

package org.xwalk.extensions;

import android.util.Log;
import org.json.JSONException;
import org.json.JSONObject;

import org.xwalk.app.runtime.extension.XWalkExtensionClient;
import org.xwalk.app.runtime.extension.XWalkExtensionContextClient;

import org.xwalk.extensions.{{interface_name}}_impl;

public class {{interface_name}} extends XWalkExtensionClient {
    final private XWalkExtensionContextClient mExtensionContext;

    private static final String TAG = "{{interface_name}}";
{% for method in methods %}
    private static final String CMD_{{method.name|upper}} = "{{method.name}}";
{% endfor %}

    private final {{interface_name}}_impl mImpl;

    public {{interface_name}}(String name, String JsApiContent, XWalkExtensionContextClient context) {
        super(name, JsApiContent, context);
        mExtensionContext = context;
        mImpl = new {{interface_name}}_impl(this);
    }

    @Override
    public void onMessage(int instanceId, String message) {
        if (message.isEmpty()) return;
        try {
            JSONObject jsonInput = new JSONObject(message);
            String cmd = jsonInput.getString("cmd");
            JSONObject jsonOutput = null;
            if (false) {}
{% for method in methods %}
            else if (cmd.equals(CMD_{{method.name|upper}})) {
                jsonOutput = mImpl.on{{method.name|capitalize}}(jsonInput);
            }
{% endfor %}
            else {
                Log.e(TAG, "Unexpected message received: " + message);
                return;
            }
            if (!jsonOutput.has("cmd")) jsonOutput.put("cmd", cmd);
            jsonOutput.put("asyncCallId", jsonInput.getString("asyncCallId"));
            this.postMessage(instanceId, jsonOutput.toString());
        } catch (JSONException e) {
            Log.e(TAG, e.toString());
        }
    }
}
